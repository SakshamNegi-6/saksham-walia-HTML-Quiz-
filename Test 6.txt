<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cyber Security Quiz - Ultimate Edition</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --glow-color-correct: #00ffc3;
      --glow-color-incorrect: #ff4d79;
      --glow-color-neutral: #00aaff;
    }

    body {
      margin: 0; padding: 0; font-family: 'Poppins', sans-serif;
      color: white; text-align: center; min-height: 100vh;
      overflow: hidden; display: flex; align-items: center;
      justify-content: center; flex-direction: column;
      cursor: none;
      background-color: #000;
    }

    #background-wrapper {
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        z-index: -1;
    }

    .background-layer {
        position: absolute; top: 0; left: 0; width: 100%; height: 100%;
        opacity: 0;
        transition: opacity 2s ease-in-out;
    }
    
    .color-layer.active { 
        opacity: 1; 
    }

    #bg-gradient {
      background: linear-gradient(135deg, #0d1b2a, #1a2a45, #0d1b2a);
      background-size: 400% 400%;
      animation: gradientBG 20s ease infinite;
    }
    @keyframes gradientBG { 0% { background-position: 0% 50%; } 50% { background-position: 100% 50%; } 100% { background-position: 0% 50%; } }
    
    #bg-stars { 
      opacity: 1;
    }
    #starfield-canvas {
        position: absolute; top: 0; left: 0;
        width: 100%; height: 100%;
    }

    #bg-pulse {
      background: radial-gradient(circle at center, #1a1a2e, #3a2a45, #1a1a2e);
      background-size: 200% 200%;
      animation: radialPulse 15s ease-in-out infinite alternate;
    }
    @keyframes radialPulse { from { background-position: center; background-size: 200% 200%; } to { background-position: center; background-size: 100% 100%; } }

    #bg-aurora {
      background: linear-gradient(170deg, #003f5c, #374c80, #7a5195, #bc5090, #ef5675, #ff764a, #ffa600);
      background-size: 300% 300%;
      animation: auroraFlow 25s ease infinite;
    }
    @keyframes auroraFlow { 0%{background-position:0% 50%} 50%{background-position:100% 50%} 100%{background-position:0% 50%} }
    
    #bg-flare {
        background: radial-gradient(circle at 80% 20%, #ff7e5f, #feb47b, #ff5f6d, #ffc371);
        background-size: 250% 250%;
        animation: solarFlare 18s ease-in-out infinite;
    }
    @keyframes solarFlare { 0% { background-position: 0% 82%; } 50% { background-position: 100% 19%; } 100% { background-position: 0% 82%; } }

    #bg-forest {
        background: linear-gradient(45deg, #0f2027, #203a43, #2c5364);
        background-size: 400% 400%;
        animation: deepForest 22s ease infinite;
    }
    @keyframes deepForest { 0%{background-position:0% 50%} 50%{background-position:100% 50%} 100%{background-position:0% 50%} }

    /* --- NEW BACKGROUNDS --- */
    #bg-ocean {
        background: linear-gradient(-45deg, #0575e6, #021b79, #23d5ab);
        background-size: 400% 400%;
        animation: cosmicOcean 20s ease infinite;
    }
    @keyframes cosmicOcean { 0%{background-position:0% 50%} 50%{background-position:100% 50%} 100%{background-position:0% 50%} }

    #bg-haze {
        background: radial-gradient(circle at 20% 80%, #ffdde1, #ee9ca7, #c33764);
        background-size: 250% 250%;
        animation: galacticHaze 25s ease-in-out infinite alternate;
    }
    @keyframes galacticHaze { from { background-position: left bottom; } to { background-position: right top; } }

    #bg-supernova {
        background: radial-gradient(circle at center, #fffbd5, #b20a2c, #3a0ca3);
        background-size: 200% 200%;
        animation: supernovaPulse 15s ease-in-out infinite;
    }
    @keyframes supernovaPulse { 0% { background-size: 200% 200%; } 50% { background-size: 100% 100%; } 100% { background-size: 200% 200%; } }

    /* --- SPOTLIGHT REWORK --- */
    .spotlight {
        position: fixed; top: 0; left: 0;
        width: 400px; height: 400px;
        border-radius: 50%; transform: translate(-50%, -50%);
        pointer-events: none; z-index: 2;
        opacity: 0;
        transition: opacity 2s ease-in-out;
    }
    .spotlight.active { opacity: 1; }
    #spotlight-gradient { background: radial-gradient(circle, rgba(29, 161, 242, 0.25) 0%, transparent 50%); }
    #spotlight-pulse { background: radial-gradient(circle, rgba(120, 81, 169, 0.25) 0%, transparent 50%); }
    #spotlight-aurora { background: radial-gradient(circle, rgba(239, 86, 117, 0.2) 0%, transparent 50%); }
    #spotlight-flare { background: radial-gradient(circle, rgba(255, 127, 95, 0.25) 0%, transparent 50%); }
    #spotlight-forest { background: radial-gradient(circle, rgba(44, 83, 100, 0.3) 0%, transparent 50%); }
    #spotlight-ocean { background: radial-gradient(circle, rgba(5, 117, 230, 0.25) 0%, transparent 50%); }
    #spotlight-haze { background: radial-gradient(circle, rgba(238, 156, 167, 0.25) 0%, transparent 50%); }
    #spotlight-supernova { background: radial-gradient(circle, rgba(255, 251, 213, 0.3) 0%, transparent 50%); }

    #splash-screen {
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background-color: rgba(0, 0, 0, 0.2);
        display: flex; align-items: center; justify-content: center;
        z-index: 9999; backdrop-filter: blur(5px);
        transition: opacity 0.5s ease-out, visibility 0.5s ease-out;
    }
    #splash-screen.hidden { opacity: 0; visibility: hidden; pointer-events: none; }
    #splash-title {
        font-size: 5vw; color: #ffd700; text-shadow: 0 0 20px #ffd700;
        animation: pulse 2s infinite ease-in-out;
    }
    @keyframes pulse { 0% { transform: scale(1); opacity: 0.8; } 50% { transform: scale(1.05); opacity: 1; } 100% { transform: scale(1); opacity: 0.8; } }
    
    .header { margin-bottom: 20px; animation: fadeInDown 1s ease-out; }
    .logo { width: 120px; height: auto; margin-bottom: 10px; }
    h1 { font-size: 28px; color: #ffd700; text-shadow: 0 0 10px #ffd700, 0 0 20px black; margin: 0; }
    
    .typing-effect { display: inline-block; overflow: hidden; white-space: nowrap; border-right: .15em solid orange; width: 0; animation: typing 3.5s steps(40, end) forwards, blink-caret .75s step-end infinite; }
    @keyframes typing { from { width: 0 } to { width: 100% } }
    @keyframes blink-caret { from, to { border-color: transparent } 50% { border-color: orange; } }

    #welcome-container, #quiz-container, #modal-content {
        background: rgba(0, 0, 0, 0.2); backdrop-filter: blur(18px); -webkit-backdrop-filter: blur(18px);
        border: 1px solid rgba(255, 255, 255, 0.25); box-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);
        transition: all 0.5s ease-in-out;
    }

    #welcome-container { width: 90%; max-width: 700px; padding: 30px; border-radius: 20px; z-index: 1; }
    #welcome-container.blurred { filter: blur(10px); transform: scale(0.95); }
    #quiz-container { display: none; width: 90%; max-width: 700px; padding: 30px; border-radius: 20px; z-index: 1; animation: breathe 8s ease-in-out infinite; }
    
    @keyframes breathe { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.01); } }

    #round-title.round-title-animate { animation: pop-out-in 0.8s ease; }
    @keyframes pop-out-in { 0% { transform: scale(1); opacity: 1; } 40% { transform: scale(1.2); opacity: 0; } 60% { transform: scale(0.8); opacity: 0; } 100% { transform: scale(1); opacity: 1; } }

    #progress-bar-container { width: 100%; background: rgba(0,0,0,0.3); border-radius: 10px; height: 10px; margin-bottom: 20px; overflow: hidden; }
    #progress-bar { height: 100%; width: 0%; background: linear-gradient(90deg, var(--glow-color-neutral), var(--glow-color-correct)); border-radius: 10px; transition: width 0.5s ease-in-out; }
    
    /* --- SMOOTHER ANIMATION TWEAK --- */
    #question-area { transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s ease-out; }
    #question-area.out { transform: translateX(-50px); opacity: 0; }
    
    .question { font-size: 22px; font-weight: 600; margin: 15px 0 25px 0; }
    .options button { display: block; width: 100%; margin: 10px 0; padding: 15px; background: rgba(255, 255, 255, 0.1); color: white; border: 1px solid rgba(255, 255, 255, 0.3); border-radius: 10px; font-size: 16px; cursor: pointer; transition: all 0.3s ease; font-family: 'Poppins', sans-serif; opacity: 0; animation: fadeInUp 0.5s ease forwards; }
    .options button:nth-child(1) { animation-delay: 0.1s; }
    .options button:nth-child(2) { animation-delay: 0.2s; }
    .options button:nth-child(3) { animation-delay: 0.3s; }
    .options button:nth-child(4) { animation-delay: 0.4s; }
    @keyframes fadeInUp { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
    .options button:not(:disabled):hover { background: rgba(255, 255, 255, 0.2); border-color: var(--glow-color-neutral); box-shadow: 0 0 15px var(--glow-color-neutral); transform: scale(1.03); }
    .options button.correct { background: rgba(0, 255, 195, 0.2); border-color: var(--glow-color-correct); box-shadow: 0 0 15px var(--glow-color-correct); transform: scale(1.05); }
    .options button.incorrect { background: rgba(255, 77, 121, 0.2); border-color: var(--glow-color-incorrect); box-shadow: 0 0 15px var(--glow-color-incorrect); }
    #next-btn, #start-btn { margin-top: 20px; padding: 12px 30px; font-size: 18px; border: none; border-radius: 10px; background: gold; color: black; font-weight: bold; cursor: pointer; transition: all 0.3s ease; }
    #next-btn { display: none; }
    #next-btn:hover, #start-btn:hover { background: orange; transform: scale(1.05); box-shadow: 0 0 20px orange; }
    #modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.7); display: flex; align-items: center; justify-content: center; opacity: 0; pointer-events: none; transition: opacity 0.4s ease-in-out; z-index: 1000; }
    #modal-overlay.show { opacity: 1; pointer-events: auto; }
    #modal-content { padding: 40px; border-radius: 20px; font-size: 28px; font-weight: 700; transform: scale(0.7); transition: transform 0.4s cubic-bezier(0.18, 0.89, 0.32, 1.28); }
    #modal-overlay.show #modal-content { transform: scale(1); }
    #modal-content.success { color: var(--glow-color-correct); text-shadow: 0 0 15px var(--glow-color-correct); }
    #modal-content.error { color: var(--glow-color-incorrect); text-shadow: 0 0 15px var(--glow-color-incorrect); }
    @keyframes fadeInDown { from { opacity: 0; transform: translateY(-30px); } to { opacity: 1; transform: translateY(0); } }
  </style>
</head>
<body>

  <div id="background-wrapper">
    <div id="bg-gradient" class="background-layer color-layer"></div>
    <div id="bg-pulse" class="background-layer color-layer"></div>
    <div id="bg-aurora" class="background-layer color-layer"></div>
    <div id="bg-flare" class="background-layer color-layer"></div>
    <div id="bg-forest" class="background-layer color-layer"></div>
    <div id="bg-ocean" class="background-layer color-layer"></div>
    <div id="bg-haze" class="background-layer color-layer"></div>
    <div id="bg-supernova" class="background-layer color-layer"></div>
    <div id="bg-stars" class="background-layer">
        <canvas id="starfield-canvas"></canvas>
    </div>
  </div>

  <div id="spotlight-wrapper">
    <div id="spotlight-gradient" class="spotlight"></div>
    <div id="spotlight-pulse" class="spotlight"></div>
    <div id="spotlight-aurora" class="spotlight"></div>
    <div id="spotlight-flare" class="spotlight"></div>
    <div id="spotlight-forest" class="spotlight"></div>
    <div id="spotlight-ocean" class="spotlight"></div>
    <div id="spotlight-haze" class="spotlight"></div>
    <div id="spotlight-supernova" class="spotlight"></div>
  </div>

  <div id="splash-screen">
      <h1 id="splash-title">Cyber Security Quiz</h1>
  </div>

  <div id="welcome-container" class="blurred">
     <div class="header">
        <img src="logo.png" alt="School Logo" class="logo">
        <h1>ST. MARY’S HIGH SCHOOL SUNDERNAGAR</h1>
      </div>
      <h2><span class="typing-effect">Welcome to the Cyber Security Quiz!</span></h2>
      <p>Score more than 50% in each round to advance. Good luck!</p>
      <button id="start-btn">Start Quiz</button>
  </div>

  <div id="quiz-container">
    <h2 id="round-title">Round 1</h2>
    <div id="progress-bar-container"><div id="progress-bar"></div></div>
    <div id="question-area">
      <p class="question" id="question">Loading Question...</p>
      <div class="options" id="options"></div>
    </div>
    <button id="next-btn">Next</button>
  </div>

  <div id="modal-overlay"> <div id="modal-content"></div> </div>

  <script>
    const fullQuizData = [
      // Round 1 – Basic Cyber Awareness
      { question: "What does the term 'phishing' mean?", options: ["Catching viruses online", "Tricking users to reveal personal info", "Blocking ads", "Speeding up internet"], answer: 1 },
      { question: "Which of these is the strongest password?", options: ["12345678", "password123", "Mydog2025", "A!7k#9Lp@2"], answer: 3 },
      { question: "What should you do if you receive a suspicious email with a link?", options: ["Click to check", "Ignore and delete", "Reply immediately", "Forward to friends"], answer: 1 },
      { question: "Ransomware is a type of attack where:", options: ["Data is locked until money is paid", "Computer runs faster", "Free games are given", "Ads pop up"], answer: 0 },
      { question: "Which device is most at risk if left without updates?", options: ["Smartphone", "Smart TV", "Laptop", "All of the above"], answer: 3 },

      // Round 2 – Digital Parenting & Advanced Threats
      { question: "The best way to monitor children’s online activity is:", options: ["Secretly checking phones", "Open communication & parental controls", "Allowing full freedom", "Taking away devices"], answer: 1 },
      { question: "What is two-factor authentication (2FA)?", options: ["Using two devices at once", "A second step to verify identity", "Two passwords only", "None of these"], answer: 1 },
      { question: "If your child is being cyberbullied, the first step is:", options: ["Ignore completely", "Encourage them to block & report", "Tell them to fight back online", "Stop internet forever"], answer: 1 },
      { question: "Which of these is an example of a 'social engineering attack'?", options: ["Sending fake bank calls", "Installing antivirus", "Using strong Wi-Fi password", "Software update"], answer: 0 },
      { question: "Public Wi-Fi should be used carefully because:", options: ["It is slow", "Hackers can intercept data", "It costs more", "It drains battery"], answer: 1 }
    ];
    let quizData = [...fullQuizData];
    let currentQuestion = 0, score = 0, round = 1, roundScore = 0;
    const roundQuestions = 5;
    const questionEl = document.getElementById("question");
    const optionsEl = document.getElementById("options");
    const nextBtn = document.getElementById("next-btn");
    const roundTitle = document.getElementById("round-title");
    const questionArea = document.getElementById("question-area");
    const progressBar = document.getElementById("progress-bar");
    const welcomeContainer = document.getElementById('welcome-container');
    const quizContainer = document.getElementById('quiz-container');
    const startBtn = document.getElementById('start-btn');
    const modalOverlay = document.getElementById('modal-overlay');
    const modalContent = document.getElementById('modal-content');
    const spotlightLayers = document.querySelectorAll('.spotlight');

    function initStarfield() {
        const canvas = document.getElementById('starfield-canvas');
        if (!canvas) return;
        const ctx = canvas.getContext('2d');
        let stars = [];
        let numStars = 500;
        function resizeCanvas() { canvas.width = window.innerWidth; canvas.height = window.innerHeight; stars = []; for (let i = 0; i < numStars; i++) { stars.push({ x: Math.random() * canvas.width, y: Math.random() * canvas.height, radius: Math.random() * 1.5, }); } }
        resizeCanvas();
        window.addEventListener('resize', resizeCanvas);
        function draw() { ctx.clearRect(0, 0, canvas.width, canvas.height); ctx.globalCompositeOperation = "lighter"; for (let i = 0; i < stars.length; i++) { let s = stars[i]; ctx.fillStyle = "#fff"; ctx.beginPath(); ctx.arc(s.x, s.y, s.radius, 0, 2 * Math.PI); ctx.fill(); } }
        function update() { for (let i = 0; i < stars.length; i++) { let s = stars[i]; s.y += 0.5 * (s.radius / 1.5) ; if (s.y > canvas.height) { s.y = 0; s.x = Math.random() * canvas.width; } } }
        function tick() { draw(); update(); requestAnimationFrame(tick); }
        tick();
    }

    const colorLayers = document.querySelectorAll('.color-layer');
    let currentColorIndex = 0;

    function cycleBackground() {
        colorLayers[currentColorIndex].classList.remove('active');
        spotlightLayers[currentColorIndex].classList.remove('active');
        
        currentColorIndex = (currentColorIndex + 1) % colorLayers.length;
        
        colorLayers[currentColorIndex].classList.add('active');
        spotlightLayers[currentColorIndex].classList.add('active');
    }

    let mouseX = 0, mouseY = 0;
    window.addEventListener('mousemove', e => { mouseX = e.clientX; mouseY = e.clientY; });
    function updateSpotlight() {
        for (const layer of spotlightLayers) {
            layer.style.transform = `translate3d(${mouseX}px, ${mouseY}px, 0) translate(-50%, -50%)`;
        }
        requestAnimationFrame(updateSpotlight);
    }
    function updateProgressBar() { const progressPercent = (currentQuestion / quizData.length) * 100; progressBar.style.width = `${progressPercent}%`; }
    function loadQuestion() { const q = quizData[currentQuestion]; questionEl.textContent = q.question; optionsEl.innerHTML = ""; q.options.forEach((option, index) => { const btn = document.createElement("button"); btn.textContent = option; btn.title = `Select option: "${option}"`; btn.onclick = () => checkAnswer(index); optionsEl.appendChild(btn); }); nextBtn.style.display = "none"; updateProgressBar(); questionArea.classList.remove('out'); }
    function checkAnswer(selected) { const correct = quizData[currentQuestion].answer; Array.from(optionsEl.children).forEach(btn => btn.disabled = true); if (selected === correct) { score++; roundScore++; showModal("Correct!", true); optionsEl.children[selected].classList.add('correct'); } else { showModal("Wrong!", false); optionsEl.children[selected].classList.add('incorrect'); optionsEl.children[correct].classList.add('correct'); } nextBtn.style.display = "inline-block"; }
    
    function nextQuestion() {
        nextBtn.disabled = true;
        questionArea.classList.add('out');
        
        setTimeout(() => {
            questionEl.textContent = '';
            optionsEl.innerHTML = '';
        }, 100);

        setTimeout(() => {
            currentQuestion++;
            if (currentQuestion % roundQuestions === 0) {
                const passThreshold = Math.ceil(roundQuestions * 0.5);
                if (roundScore < passThreshold) {
                    showModal(`Round ${round} Failed! Quiz Over.`, false, true);
                    nextBtn.style.display = "none";
                    return;
                }
                round++;
                roundScore = 0;
                if (currentQuestion >= quizData.length) {
                    updateProgressBar();
                    showModal("🎉 Congratulations! You finished all rounds!", true, true);
                    nextBtn.style.display = "none";
                    return;
                }
                roundTitle.textContent = "Round " + round;
                roundTitle.classList.add('round-title-animate');
                roundTitle.addEventListener('animationend', () => {
                    roundTitle.classList.remove('round-title-animate');
                }, { once: true });
            }
            loadQuestion();
            nextBtn.disabled = false;
        }, 600);
    }
    
    function startQuiz() {
        welcomeContainer.style.opacity = '0';
        welcomeContainer.style.transform = 'scale(0.9)';
        setTimeout(() => {
            welcomeContainer.style.display = 'none';
            quizContainer.style.display = 'block';
            loadQuestion(); // This is the added line
            setTimeout(() => {
                quizContainer.style.opacity = '1';
            }, 50);
        }, 500);
    }

    function showModal(message, isSuccess, isGameOver = false) { modalContent.innerHTML = message; modalContent.className = isSuccess ? 'success' : 'error'; modalOverlay.classList.add('show'); if (!isGameOver) { setTimeout(() => modalOverlay.classList.remove('show'), 1200); } }

    document.addEventListener('DOMContentLoaded', () => {
        const splashScreen = document.getElementById('splash-screen');
        const welcomeContainer = document.getElementById('welcome-container');
        setTimeout(() => { splashScreen.classList.add('hidden'); welcomeContainer.classList.remove('blurred'); }, 2500);
        
        initStarfield();
        
        colorLayers[0].classList.add('active');
        spotlightLayers[0].classList.add('active');
        setInterval(cycleBackground, 10000);

        requestAnimationFrame(updateSpotlight);
    });
    startBtn.onclick = startQuiz;
    nextBtn.onclick = nextQuestion;
  </script>

<footer style="
    position: fixed;
    top: 10px;
    right: 10px;
    font-size: 12px;
    color: grey;
    opacity: 0.8;
    font-family: 'Poppins', sans-serif;
  ">
    © 2025 Saksham Negi & Aarish Walia. All Rights Reserved.
  </footer>

  <!-- 
    © 2025 Saksham Negi & Aarish Walia
    This HTML code and quiz design are protected under copyright law.
    Unauthorized copying, modification, or distribution is prohibited. 
  -->
</body>
</html>